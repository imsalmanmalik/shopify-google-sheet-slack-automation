name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Docker image
        run: |
          docker build -t shopfiy-automation:latest .

      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        id: trivy
        with:
          image-ref: shopfiy-automation:latest
          format: 'json'
          output: 'trivy-report.json'

      - name: Fail if HIGH or CRITICAL vulnerabilities are found
        run: |
          cat trivy-report.json
          if grep -q '"Severity": "HIGH"' trivy-report.json || grep -q '"Severity": "CRITICAL"' trivy-report.json; then
            echo "HIGH or CRITICAL vulnerabilities found!"
            exit 1
          fi

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Release
        id: semrel
        uses: go-semantic-release/action@v1
        with:
          changelog-generator-opt: "emojis=true"
          changelog-file: "CHANGELOG.md"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag and push Docker image to GHCR
        run: |
          docker tag shopfiy-automation:latest ghcr.io/${{ github.repository }}/shopfiy-automation: ${{ steps.semrel.outputs.version }}
          docker push ghcr.io/${{ github.repository }}/shopfiy-automation: ${{ steps.semrel.outputs.version }}
          docker push ghcr.io/${{ github.repository }}/shopfiy-automation:latest
